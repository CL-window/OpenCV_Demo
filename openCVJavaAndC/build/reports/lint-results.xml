<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 2.3.0">

    <issue
        id="MissingPermission"
        severity="Error"
        message="Missing permissions required by CameraManager.openCamera: android.permission.CAMERA"
        category="Correctness"
        priority="9"
        summary="Missing Permissions"
        explanation="This check scans through your code and libraries and looks at the APIs being used, and checks this against the set of permissions required to access those APIs. If the code using those APIs is called at runtime, then the program will crash.&#xA;&#xA;Furthermore, for permissions that are revocable (with targetSdkVersion 23), client code must also be prepared to handle the calls throwing an exception if the user rejects the request for permission at runtime."
        errorLine1="                manager.openCamera(mCameraID, mStateCallback, mBackgroundHandler);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/Camera2Renderer.java"
            line="129"
            column="17"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 9 (current min is 8): `android.hardware.Camera.CameraInfo#orientation`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and device whether it&apos;s safe and can be suppressed or whether the code needs tbe guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;If your code is *deliberately* accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;"
        errorLine1="                        oritation = (info.orientation + degrees) % 360;"
        errorLine2="                                     ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/JavaCameraView.java"
            line="167"
            column="38"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 9 (current min is 8): `android.hardware.Camera.CameraInfo#orientation`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and device whether it&apos;s safe and can be suppressed or whether the code needs tbe guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;If your code is *deliberately* accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;"
        errorLine1="                        oritation = (info.orientation - degrees + 360) % 360;"
        errorLine2="                                     ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/JavaCameraView.java"
            line="170"
            column="38"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 9 (current min is 8): `android.graphics.ImageFormat#YV12`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and device whether it&apos;s safe and can be suppressed or whether the code needs tbe guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;If your code is *deliberately* accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;"
        errorLine1="                        params.setPreviewFormat(ImageFormat.YV12);  // &quot;generic&quot; or &quot;android&quot; = android emulator"
        errorLine2="                                                ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/JavaCameraView.java"
            line="186"
            column="49"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 9 (current min is 8): `android.hardware.Camera.Parameters#FOCUS_MODE_CONTINUOUS_VIDEO`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and device whether it&apos;s safe and can be suppressed or whether the code needs tbe guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;If your code is *deliberately* accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;"
        errorLine1="                        params.setFocusMode(Camera.Parameters.FOCUS_MODE_CONTINUOUS_VIDEO);"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/JavaCameraView.java"
            line="201"
            column="45"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Call requires API level 9 (current min is 8): new android.hardware.Camera.CameraInfo"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on *all* versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is *deliberately* accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-vNN` folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="                    Camera.CameraInfo info = new Camera.CameraInfo();"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/JavaCameraView.java"
            line="163"
            column="46"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Call requires API level 9 (current min is 8): android.hardware.Camera#getCameraInfo"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on *all* versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is *deliberately* accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-vNN` folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="                    Camera.getCameraInfo( cameraId, info );"
        errorLine2="                           ~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/JavaCameraView.java"
            line="164"
            column="28"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the `android.os.Build.VERSION_CODES` javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="    &lt;uses-sdk android:minSdkVersion=&quot;8&quot; android:targetSdkVersion=&quot;21&quot; />"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/AndroidManifest.xml"
            line="7"
            column="41"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        targetSdkVersion 25"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/build.gradle"
            line="9"
            column="9"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 31 (OpenCVLoader/BaseLoaderCallback)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="                Log.e(TAG, &quot;Package installation failed!&quot;);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/BaseLoaderCallback.java"
            line="31"
            column="17"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 31 (OpenCVLoader/BaseLoaderCallback)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="                Log.d(TAG, &quot;OpenCV library installation was canceled by user&quot;);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/BaseLoaderCallback.java"
            line="46"
            column="17"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 31 (OpenCVLoader/BaseLoaderCallback)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="                Log.d(TAG, &quot;OpenCV Manager Service is uncompatible with this app!&quot;);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/BaseLoaderCallback.java"
            line="52"
            column="17"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 31 (OpenCVLoader/BaseLoaderCallback)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="                Log.e(TAG, &quot;OpenCV loading failed!&quot;);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/BaseLoaderCallback.java"
            line="67"
            column="17"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="Old buildToolsVersion 25.0.0; recommended version is 25.0.2 or later"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    buildToolsVersion &quot;25.0.0&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/build.gradle"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `minSdkVersion` value (`8`) is not used; it is always overridden by the value specified in the Gradle build script (`8`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="    &lt;uses-sdk android:minSdkVersion=&quot;8&quot; android:targetSdkVersion=&quot;21&quot; />"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/AndroidManifest.xml"
            line="7"
            column="15"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `targetSdkVersion` value (`21`) is not used; it is always overridden by the value specified in the Gradle build script (`25`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="    &lt;uses-sdk android:minSdkVersion=&quot;8&quot; android:targetSdkVersion=&quot;21&quot; />"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/AndroidManifest.xml"
            line="7"
            column="41"/>
    </issue>

    <issue
        id="UnsafeDynamicallyLoadedCode"
        severity="Warning"
        message="Dynamically loading code using `load` is risky, please use `loadLibrary` instead when possible"
        category="Security"
        priority="4"
        summary="`load` used to dynamically load code"
        explanation="Dynamically loading code from locations other than the application&apos;s library directory or the Android platform&apos;s built-in library directories is dangerous, as there is an increased risk that the code could have been tampered with. Applications should use `loadLibrary` when possible, which provides increased assurance that libraries are loaded from one of these safer locations. Application developers should use the features of their development environment to place application native libraries into the lib directory of their compiled APKs."
        errorLine1="            System.load(AbsPath);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/java/org/opencv/android/AsyncServiceHelper.java"
            line="347"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_eye` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_eye.xml"
            line="45"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_eye_tree_eyeglasses` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_eye_tree_eyeglasses.xml"
            line="45"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_frontalcatface` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_frontalcatface.xml"
            line="77"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_frontalcatface_extended` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_frontalcatface_extended.xml"
            line="77"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_frontalface_alt` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_frontalface_alt.xml"
            line="45"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_frontalface_alt2` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_frontalface_alt2.xml"
            line="45"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_frontalface_alt_tree` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_frontalface_alt_tree.xml"
            line="46"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_frontalface_default` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_frontalface_default.xml"
            line="45"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_licence_plate_rus_16stages` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_licence_plate_rus_16stages.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_lowerbody` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_lowerbody.xml"
            line="139"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_profileface` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_profileface.xml"
            line="45"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_russian_plate_number` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_russian_plate_number.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.haarcascade_upperbody` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/haarcascade_upperbody.xml"
            line="139"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.lbpcascade_frontalcatface` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/lbpcascade_frontalcatface.xml"
            line="76"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.lbpcascade_frontalface_improved` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/lbpcascade_frontalface_improved.xml"
            line="67"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.lbpcascade_profileface` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;opencv_storage>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/jf/Desktop/slack/graduating/open_cv/OpenCV/openCVJavaAndC/src/main/res/raw/lbpcascade_profileface.xml"
            line="9"
            column="1"/>
    </issue>

</issues>
